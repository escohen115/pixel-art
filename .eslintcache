[{"/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/index.js":"1","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/App.js":"2","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/PortfolioNav.js":"3","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/MainNav.js":"4","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/artIndex/ArtworkGrid.js":"5","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/HomeParent.js":"6","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/SavedGrid.js":"7","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/CanvasContainer.js":"8","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/CommentsContainer.js":"9","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/Toolbar.js":"10","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/Pixel.js":"11","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/PixelGrid.js":"12","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/ColorGrid.js":"13","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/signup/SignUp.js":"14","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/artIndex/Artwork.js":"15","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/login/LogIn.js":"16","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/Comment.js":"17"},{"size":286,"mtime":1611614463980,"results":"18","hashOfConfig":"19"},{"size":2797,"mtime":1611763553450,"results":"20","hashOfConfig":"19"},{"size":1753,"mtime":1611783135938,"results":"21","hashOfConfig":"19"},{"size":1054,"mtime":1611782441824,"results":"22","hashOfConfig":"19"},{"size":944,"mtime":1611762807630,"results":"23","hashOfConfig":"19"},{"size":877,"mtime":1611764682789,"results":"24","hashOfConfig":"19"},{"size":743,"mtime":1611763529443,"results":"25","hashOfConfig":"19"},{"size":461,"mtime":1611614542121,"results":"26","hashOfConfig":"19"},{"size":816,"mtime":1611783577881,"results":"27","hashOfConfig":"19"},{"size":704,"mtime":1611701659948,"results":"28","hashOfConfig":"19"},{"size":717,"mtime":1611614788355,"results":"29","hashOfConfig":"19"},{"size":694,"mtime":1611693277385,"results":"30","hashOfConfig":"19"},{"size":329,"mtime":1611676279754,"results":"31","hashOfConfig":"19"},{"size":1241,"mtime":1611782711809,"results":"32","hashOfConfig":"19"},{"size":3032,"mtime":1611783665870,"results":"33","hashOfConfig":"19"},{"size":1211,"mtime":1611782609647,"results":"34","hashOfConfig":"19"},{"size":105,"mtime":1611765281974,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"xn24qv",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/index.js",[],["77","78"],"/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/App.js",["79"],"import React, { useState, useEffect } from 'react'\nimport { Route, Switch } from \"react-router-dom\";\nimport MainNav from './components/MainNav'\nimport PortfolioNav from './components/PortfolioNav'\nimport HomeParent from './components/pages/home/HomeParent'\nimport ArtworkGrid from './components/pages/artIndex/ArtworkGrid'\nimport SignUp from './components/pages/signup/SignUp'\nimport LogIn from './components/pages/login/LogIn'\nimport './App.css';\n\n const defaultGrid = []\n    for (let i = 0; i < 600; i++){\n        defaultGrid.push(\"lightgrey\")\n    }\n\nfunction App() {\n  const [colorGrid, setColorGrid] = useState(defaultGrid)\n  const [colorState, setColorState] = useState('black')\n  const [user, setUser] = useState(null)\n  const [saved, setSaved] = useState(false)\n  const [commentsDrawingId, setCommentsDrawingId] = useState(null)\n\n  function handleSave(){\n    setSaved(!saved)\n    if (user) {\n      let drawing = {\n          color_array: colorGrid,\n          user_id: user.id\n      }\n     let confObj = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(drawing),\n        }\n        fetch('http://localhost:3000/drawings', confObj)\n          .then(response=>response.json())\n          .then(data=>console.log(data))\n    }\n  }\n\n\n  function updateGrid(newGrid) {\n    setColorGrid(newGrid)\n  }\n\n  function handleClear(){\n    setColorGrid(defaultGrid)\n  }\n\n \n  return (\n    <>\n     <MainNav user={user} setUser={setUser} saved={saved} setSaved={setSaved}/>\n      <Switch> \n        <Route exact path='/'>\n          <HomeParent \n            handleSave={handleSave}\n            colorGrid={colorGrid}\n            setColorGrid={setColorGrid}\n            colorState={colorState} \n            setColorState={setColorState}\n            handleClear={handleClear}\n            commentsDrawingId={commentsDrawingId}\n          />\n        <PortfolioNav \n            saved={saved} \n            setSaved={setSaved}\n            user = {user}\n            colorGrid={colorGrid} \n            updateGrid={updateGrid}\n            setColorGrid={setColorGrid}\n            setCommentsDrawingId={setCommentsDrawingId}\n            />\n        </Route>\n\n        <Route path='/login'> \n          <LogIn user={user} setUser={setUser}/>\n        </Route>\n\n        <Route path='/signup'> \n          <SignUp user={user} setUser={setUser}/>\n        </Route>\n\n        <Route path='/drawings'>\n          <ArtworkGrid saved={saved} setSaved={setSaved} user={user}/>\n            <PortfolioNav \n            saved={saved} \n            setSaved={setSaved}\n            colorGrid={colorGrid} \n            updateGrid={updateGrid}\n            setColorGrid={setColorGrid}/>\n        </Route>\n      </Switch>\n    </>\n  )\n}\n\nexport default App;\n","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/PortfolioNav.js",["80"],"/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/MainNav.js",["81","82"],"/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/artIndex/ArtworkGrid.js",["83"],"import React, { useState, useEffect } from 'react'\nimport Artwork from './Artwork'\n\nexport default function ArtworkGrid({ user, saved, setSaved }) {\n    const [allDrawings, setAllDrawings] = useState([])\n    \n    useEffect(()=>{\n        fetch(`http://127.0.0.1:3000/drawings`)\n        .then(response => response.json())\n        .then(drawings => {\n            const artwork = drawings.map(drawing => {\n                return (\n                    <Artwork \n                        key={drawing.id}\n                        drawing_id={drawing.id}\n                        colorGrid={drawing.color_array} \n                        saved={saved}\n                        setSaved={setSaved}\n                        user={user}\n                    />\n                )\n            })\n            setAllDrawings(artwork)\n        })\n    },[])\n    \n    return (\n        <div className=\"artwork-container\">\n            {allDrawings}\n        </div>\n    )\n}","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/HomeParent.js",[],"/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/SavedGrid.js",["84","85"],"import Pixel from './Pixel'\nimport React, { useState } from \"react\"\n\n\nexport default function SavedGrid({ grid, updateGrid, handleDelete, id, setCommentsDrawingId}){\n\n\n    const pixels = grid.map(color => {\n        return (\n        <div \n            className=\"pixel\" \n            style= {{background: color}}\n        >\n        </div>\n        )\n    })\n\n    function handleUpdate(){\n        updateGrid(grid)\n        setCommentsDrawingId(id)\n    }\n\n    return(\n        <div>\n            <div \n                className=\"saved-grid-container\"\n                onClick={handleUpdate}>\n                {pixels}\n            </div>\n            <button className=\"delete\" onClick={()=>handleDelete(id)}>🗑️</button>\n        </div>\n        \n    )\n\n}","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/CanvasContainer.js",[],"/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/CommentsContainer.js",["86","87"],"/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/Toolbar.js",["88"],"import React, { useState } from 'react' \nimport ColorGrid from './ColorGrid'\n\nexport default function Toolbar({ handleColorSelection }){\n\n    const colorPalette = [ \"black\", \"lightgrey\", \"white\",\"SaddleBrown\",\"orange\", \"red\", \n    \"yellow\", \"Chartreuse\",  \"limegreen\",\"turquoise\",\"Aquamarine\", \"mediumblue\", \"indigo\", \"BlueViolet\", \"violet\", \"pink\" ]\n\n    const colorGrid = colorPalette.map(color => {\n        return <ColorGrid key={Math.random()} color={color} handleColorSelection={handleColorSelection}/>\n    })\n    \n    return(\n        <div className=\"div2\">\n            <div className=\"color-selector-container\">\n                {colorGrid}\n                \n            </div>\n        </div>\n    )\n}","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/Pixel.js",["89","90"],"import React,{useState, useEffect} from \"react\"\n\nexport default function Pixel({color, mouseDown, colorState, colorGrid, setColorGrid, index}){\n\n    \n    function handleColorChange(e){\n        if (e.type === 'mousedown'){\n            updateGrid()\n        }\n\n        if (mouseDown === true){\n            updateGrid()\n        }\n\n\n    }\n\n    function updateGrid(){\n        let newColorGrid = [...colorGrid]\n        newColorGrid[index] = colorState\n        setColorGrid(newColorGrid)\n    }\n    \n    return(\n        <div \n            className=\"pixel\" \n            style= {{background: color}}\n            onMouseOver={handleColorChange}\n            onMouseDown={(e)=>handleColorChange(e)}\n        >\n        </div>\n    )\n}","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/PixelGrid.js",["91"],"import Pixel from './Pixel'\nimport React, { useState, useEffect } from \"react\"\n\n\nexport default function PixelGrid({ colorState, colorGrid, setColorGrid }){\n\n    const [mouseDown, setMouseDown] = useState(false)\n\n    const pixels = colorGrid.map((color, index) => {\n        return (\n        <Pixel color={color} \n        mouseDown={mouseDown} \n        colorState={colorState} \n        colorGrid={colorGrid}\n        setColorGrid={setColorGrid}\n        index={index}\n        key={index}/>)\n    })\n\n    return(\n        <div \n        onMouseDown={()=>setMouseDown(true)} \n        onMouseUp={()=>setMouseDown(false)} \n        className=\"grid-container\">\n            {pixels}\n        </div>\n    )\n\n\n}","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/ColorGrid.js",[],"/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/signup/SignUp.js",[],"/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/artIndex/Artwork.js",[],"/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/login/LogIn.js",["92"],"/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/Comment.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":27,"nodeType":"99","messageId":"100","endLine":1,"endColumn":36},{"ruleId":"101","severity":1,"message":"102","line":51,"column":8,"nodeType":"103","endLine":51,"endColumn":15,"suggestions":"104"},{"ruleId":"97","severity":1,"message":"105","line":1,"column":19,"nodeType":"99","messageId":"100","endLine":1,"endColumn":23},{"ruleId":"106","severity":1,"message":"107","line":19,"column":17,"nodeType":"108","endLine":19,"endColumn":51},{"ruleId":"101","severity":1,"message":"109","line":25,"column":7,"nodeType":"103","endLine":25,"endColumn":9,"suggestions":"110"},{"ruleId":"97","severity":1,"message":"111","line":1,"column":8,"nodeType":"99","messageId":"100","endLine":1,"endColumn":13},{"ruleId":"97","severity":1,"message":"112","line":2,"column":17,"nodeType":"99","messageId":"100","endLine":2,"endColumn":25},{"ruleId":"97","severity":1,"message":"113","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":15},{"ruleId":"101","severity":1,"message":"114","line":15,"column":7,"nodeType":"103","endLine":15,"endColumn":18,"suggestions":"115"},{"ruleId":"97","severity":1,"message":"112","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":25},{"ruleId":"97","severity":1,"message":"112","line":1,"column":15,"nodeType":"99","messageId":"100","endLine":1,"endColumn":23},{"ruleId":"97","severity":1,"message":"98","line":1,"column":25,"nodeType":"99","messageId":"100","endLine":1,"endColumn":34},{"ruleId":"97","severity":1,"message":"98","line":2,"column":27,"nodeType":"99","messageId":"100","endLine":2,"endColumn":36},{"ruleId":"97","severity":1,"message":"98","line":1,"column":15,"nodeType":"99","messageId":"100","endLine":1,"endColumn":24},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleDelete', 'setCommentsDrawingId', 'updateGrid', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["118"],"'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'saved', 'setSaved', and 'user'. Either include them or remove the dependency array.",["119"],"'Pixel' is defined but never used.","'useState' is defined but never used.","'Comment' is defined but never used.","React Hook useEffect has a missing dependency: 'commentsDrawingId'. Either include it or remove the dependency array.",["120"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},"Update the dependencies array to be: [handleDelete, saved, setCommentsDrawingId, updateGrid, user]",{"range":"127","text":"128"},"Update the dependencies array to be: [saved, setSaved, user]",{"range":"129","text":"130"},"Update the dependencies array to be: [colorGrid, commentsDrawingId]",{"range":"131","text":"132"},[1649,1656],"[handleDelete, saved, setCommentsDrawingId, updateGrid, user]",[830,832],"[saved, setSaved, user]",[450,461],"[colorGrid, commentsDrawingId]"]