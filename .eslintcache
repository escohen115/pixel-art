[{"/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/index.js":"1","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/App.js":"2","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/PortfolioNav.js":"3","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/MainNav.js":"4","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/artIndex/ArtworkGrid.js":"5","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/HomeParent.js":"6","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/SavedGrid.js":"7","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/CanvasContainer.js":"8","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/CommentsContainer.js":"9","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/Toolbar.js":"10","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/Pixel.js":"11","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/PixelGrid.js":"12","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/ColorGrid.js":"13","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/signup/SignUp.js":"14","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/artIndex/Artwork.js":"15","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/login/LogIn.js":"16","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/Comment.js":"17"},{"size":286,"mtime":1611614463980,"results":"18","hashOfConfig":"19"},{"size":2786,"mtime":1618950535058,"results":"20","hashOfConfig":"19"},{"size":1753,"mtime":1611783135938,"results":"21","hashOfConfig":"19"},{"size":990,"mtime":1618950558880,"results":"22","hashOfConfig":"19"},{"size":944,"mtime":1611762807630,"results":"23","hashOfConfig":"19"},{"size":877,"mtime":1611764682789,"results":"24","hashOfConfig":"19"},{"size":743,"mtime":1611763529443,"results":"25","hashOfConfig":"19"},{"size":461,"mtime":1611614542121,"results":"26","hashOfConfig":"19"},{"size":816,"mtime":1611783577881,"results":"27","hashOfConfig":"19"},{"size":704,"mtime":1611701659948,"results":"28","hashOfConfig":"19"},{"size":717,"mtime":1611614788355,"results":"29","hashOfConfig":"19"},{"size":694,"mtime":1611693277385,"results":"30","hashOfConfig":"19"},{"size":329,"mtime":1611676279754,"results":"31","hashOfConfig":"19"},{"size":1241,"mtime":1612392002042,"results":"32","hashOfConfig":"19"},{"size":2999,"mtime":1612544869179,"results":"33","hashOfConfig":"19"},{"size":1211,"mtime":1611782609647,"results":"34","hashOfConfig":"19"},{"size":105,"mtime":1611765281974,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"xn24qv",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"38"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/index.js",[],["79","80"],"/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/App.js",[],"/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/PortfolioNav.js",["81"],"import SavedGrid from './pages/home/SavedGrid'\nimport React, {useEffect, useState} from \"react\"\n\nexport default function PortfolioNav({colorGrid, saved, setSaved, setColorGrid, updateGrid, user, setCommentsDrawingId}){\n\n    const [savedGrid, setSavedGrid] = useState([])\n\n    \n    function handleDelete(id){\n        \n        if (window.confirm(\"Are you sure you'd like to delete this drawing?\")){\n        \n            let confObj = {\n                method: 'DELETE',\n                headers: {'Content-Type': 'application/json'},\n            }\n            fetch(`http://localhost:3000/drawings/${id}`, confObj)\n            .then(response=>response.json())\n            .then(data=>{\n                setSaved(!saved)\n                })\n            }\n        }\n\n    useEffect(() => {\n        if (user){\n            fetch(`http://localhost:3000/users/${user.id}`)\n                .then(r=>r.json())\n                .then(data=>{\n                    console.log(data)\n\n                    let newGrid = data.drawings.map((drawing)=>{\n                        \n                        return(\n                            <SavedGrid \n                                grid={drawing.color_array} \n                                updateGrid={updateGrid}\n                                handleDelete={handleDelete}\n                                id={drawing.id}\n                                setCommentsDrawingId={setCommentsDrawingId}\n                            />\n                        )\n                    })\n                    setSavedGrid(newGrid)  \n                })\n        }\n        else\n        {\n            setSavedGrid([])\n        }\n    }, [saved])\n\n\n    return(\n        <div className=\"div4\">\n            {savedGrid}\n        </div>\n    )\n\n\n}\n\n","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/MainNav.js",["82"],"/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/artIndex/ArtworkGrid.js",["83"],"import React, { useState, useEffect } from 'react'\nimport Artwork from './Artwork'\n\nexport default function ArtworkGrid({ user, saved, setSaved }) {\n    const [allDrawings, setAllDrawings] = useState([])\n    \n    useEffect(()=>{\n        fetch(`http://127.0.0.1:3000/drawings`)\n        .then(response => response.json())\n        .then(drawings => {\n            const artwork = drawings.map(drawing => {\n                return (\n                    <Artwork \n                        key={drawing.id}\n                        drawing_id={drawing.id}\n                        colorGrid={drawing.color_array} \n                        saved={saved}\n                        setSaved={setSaved}\n                        user={user}\n                    />\n                )\n            })\n            setAllDrawings(artwork)\n        })\n    },[])\n    \n    return (\n        <div className=\"artwork-container\">\n            {allDrawings}\n        </div>\n    )\n}","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/HomeParent.js",[],"/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/SavedGrid.js",["84","85"],"import Pixel from './Pixel'\nimport React, { useState } from \"react\"\n\n\nexport default function SavedGrid({ grid, updateGrid, handleDelete, id, setCommentsDrawingId}){\n\n\n    const pixels = grid.map(color => {\n        return (\n        <div \n            className=\"pixel\" \n            style= {{background: color}}\n        >\n        </div>\n        )\n    })\n\n    function handleUpdate(){\n        updateGrid(grid)\n        setCommentsDrawingId(id)\n    }\n\n    return(\n        <div>\n            <div \n                className=\"saved-grid-container\"\n                onClick={handleUpdate}>\n                {pixels}\n            </div>\n            <button className=\"delete\" onClick={()=>handleDelete(id)}>üóëÔ∏è</button>\n        </div>\n        \n    )\n\n}","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/CanvasContainer.js",[],"/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/CommentsContainer.js",["86","87"],"import React, { useEffect, useState } from 'react'\nimport Comment from \"./Comment\"\n\nexport default function CommentsContainer({commentsDrawingId, colorGrid}){\n\n    const [comments, setComments] = useState([])\n\n\n    useEffect(()=>{\n        if (commentsDrawingId){\n            fetch(`http://localhost:3000/drawings/${commentsDrawingId}`)\n            .then(response=>response.json())\n            .then(data=> setComments(data.comments))\n        }\n    },[colorGrid])\n\n    \n    let commentsMapped = comments.map(comment=>{\n        return(\n            <div>\n                {comment.description}\n                - {comment.commenter}\n            </div>\n        )\n    })\n    \n\n    return(\n        <div className=\"div5\">\n            <h3 className=\"comments\">Comments:</h3>\n            {commentsMapped}\n        </div>\n    )\n}","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/Toolbar.js",["88"],"import React, { useState } from 'react' \nimport ColorGrid from './ColorGrid'\n\nexport default function Toolbar({ handleColorSelection }){\n\n    const colorPalette = [ \"black\", \"lightgrey\", \"white\",\"SaddleBrown\",\"orange\", \"red\", \n    \"yellow\", \"Chartreuse\",  \"limegreen\",\"turquoise\",\"Aquamarine\", \"mediumblue\", \"indigo\", \"BlueViolet\", \"violet\", \"pink\" ]\n\n    const colorGrid = colorPalette.map(color => {\n        return <ColorGrid key={Math.random()} color={color} handleColorSelection={handleColorSelection}/>\n    })\n    \n    return(\n        <div className=\"div2\">\n            <div className=\"color-selector-container\">\n                {colorGrid}\n                \n            </div>\n        </div>\n    )\n}","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/Pixel.js",["89","90"],"import React,{useState, useEffect} from \"react\"\n\nexport default function Pixel({color, mouseDown, colorState, colorGrid, setColorGrid, index}){\n\n    \n    function handleColorChange(e){\n        if (e.type === 'mousedown'){\n            updateGrid()\n        }\n\n        if (mouseDown === true){\n            updateGrid()\n        }\n\n\n    }\n\n    function updateGrid(){\n        let newColorGrid = [...colorGrid]\n        newColorGrid[index] = colorState\n        setColorGrid(newColorGrid)\n    }\n    \n    return(\n        <div \n            className=\"pixel\" \n            style= {{background: color}}\n            onMouseOver={handleColorChange}\n            onMouseDown={(e)=>handleColorChange(e)}\n        >\n        </div>\n    )\n}","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/PixelGrid.js",["91"],"import Pixel from './Pixel'\nimport React, { useState, useEffect } from \"react\"\n\n\nexport default function PixelGrid({ colorState, colorGrid, setColorGrid }){\n\n    const [mouseDown, setMouseDown] = useState(false)\n\n    const pixels = colorGrid.map((color, index) => {\n        return (\n        <Pixel color={color} \n        mouseDown={mouseDown} \n        colorState={colorState} \n        colorGrid={colorGrid}\n        setColorGrid={setColorGrid}\n        index={index}\n        key={index}/>)\n    })\n\n    return(\n        <div \n        onMouseDown={()=>setMouseDown(true)} \n        onMouseUp={()=>setMouseDown(false)} \n        className=\"grid-container\">\n            {pixels}\n        </div>\n    )\n\n\n}","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/ColorGrid.js",[],"/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/signup/SignUp.js",[],"/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/artIndex/Artwork.js",[],"/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/login/LogIn.js",["92"],"import React,{useEffect, useState} from \"react\"\nimport { useHistory } from \"react-router-dom\";\n\n\nexport default function LogIn ({user, setUser}){\n    let history = useHistory()\n\n    const [formState, setFormState] = useState({})\n\n    function handleChange(e){\n        setFormState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    function handleSubmit(e){\n        e.preventDefault()\n        let confObj = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(formState),\n        }\n\n        fetch('http://localhost:3000/users/login', confObj)\n        .then(response=>response.json())\n        .then(data=>{\n            setUser(data)         \n            history.push('/')\n\n        })\n\n    }\n\n    return (\n\n        <div className=\"form \">\n\n            <form className=\"signup\" onSubmit={(e)=>handleSubmit(e)}>\n                <label>\n                    username:\n                    <input type=\"text\" name=\"username\" onChange={(e)=>handleChange(e)}/>\n                </label>\n                    <input type=\"submit\" value=\"Login\" className=\"button\"/>\n            </form>\n        </div>\n    )\n}","/Users/simoncohen/Flatiron/code/pixel-art-parent/pixel-art/pixel-art/src/components/pages/home/Comment.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":51,"column":8,"nodeType":"99","endLine":51,"endColumn":15,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":18,"column":17,"nodeType":"103","endLine":18,"endColumn":51},{"ruleId":"97","severity":1,"message":"104","line":25,"column":7,"nodeType":"99","endLine":25,"endColumn":9,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":13},{"ruleId":"106","severity":1,"message":"110","line":2,"column":17,"nodeType":"108","messageId":"109","endLine":2,"endColumn":25},{"ruleId":"106","severity":1,"message":"111","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":15},{"ruleId":"97","severity":1,"message":"112","line":15,"column":7,"nodeType":"99","endLine":15,"endColumn":18,"suggestions":"113"},{"ruleId":"106","severity":1,"message":"110","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"110","line":1,"column":15,"nodeType":"108","messageId":"109","endLine":1,"endColumn":23},{"ruleId":"106","severity":1,"message":"114","line":1,"column":25,"nodeType":"108","messageId":"109","endLine":1,"endColumn":34},{"ruleId":"106","severity":1,"message":"114","line":2,"column":27,"nodeType":"108","messageId":"109","endLine":2,"endColumn":36},{"ruleId":"106","severity":1,"message":"114","line":1,"column":15,"nodeType":"108","messageId":"109","endLine":1,"endColumn":24},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleDelete', 'setCommentsDrawingId', 'updateGrid', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["117"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'saved', 'setSaved', and 'user'. Either include them or remove the dependency array.",["118"],"no-unused-vars","'Pixel' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Comment' is defined but never used.","React Hook useEffect has a missing dependency: 'commentsDrawingId'. Either include it or remove the dependency array.",["119"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"Update the dependencies array to be: [handleDelete, saved, setCommentsDrawingId, updateGrid, user]",{"range":"126","text":"127"},"Update the dependencies array to be: [saved, setSaved, user]",{"range":"128","text":"129"},"Update the dependencies array to be: [colorGrid, commentsDrawingId]",{"range":"130","text":"131"},[1649,1656],"[handleDelete, saved, setCommentsDrawingId, updateGrid, user]",[830,832],"[saved, setSaved, user]",[450,461],"[colorGrid, commentsDrawingId]"]